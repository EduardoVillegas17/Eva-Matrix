import { Api } from "../tl";
import { RequestIter } from "../requestIter";
import { TelegramClient } from "../index";
import { Dialog } from "../tl/custom/dialog";
import { DateLike, EntityLike } from "../define";
import { TotalList } from "../Helpers";
interface DialogsIterInterface {
    offsetDate: number;
    offsetId: number;
    offsetPeer: Api.TypePeer;
    ignorePinned: boolean;
    ignoreMigrated: boolean;
    folder: number;
}
export declare class _DialogsIter extends RequestIter {
    private request?;
    private seen?;
    private offsetDate?;
    private ignoreMigrated?;
    _init({ offsetDate, offsetId, offsetPeer, ignorePinned, ignoreMigrated, folder, }: DialogsIterInterface): Promise<true | undefined>;
    _loadNextChunk(): Promise<boolean | undefined>;
}
export interface IterDialogsParams {
    limit?: number;
    offsetDate?: DateLike;
    offsetId?: number;
    offsetPeer?: EntityLike;
    ignorePinned?: boolean;
    ignoreMigrated?: boolean;
    folder?: number;
    archived?: boolean;
}
export declare function iterDialogs(client: TelegramClient, { limit, offsetDate, offsetId, offsetPeer, ignorePinned, ignoreMigrated, folder, archived, }: IterDialogsParams): _DialogsIter;
export declare function getDialogs(client: TelegramClient, params: IterDialogsParams): Promise<TotalList<Dialog>>;
export {};
